{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport * as L from 'leaflet';\nlet CarteComponent = class CarteComponent {\n  constructor(batimentService, filterService) {\n    this.batimentService = batimentService;\n    this.filterService = filterService;\n    this.batiments = [];\n    this.selectedType = '';\n    this.markers = [];\n  }\n  // Function to initialize the map\n  ngAfterViewInit() {\n    if (typeof this.map === 'undefined') {\n      this.createMap();\n      this.getUserLocation();\n      this.loadBatiments();\n    }\n  }\n  onTypeSelected(type) {\n    this.selectedType = type;\n    this.loadBatiments();\n  }\n  // Function to create the map\n  createMap() {\n    const franceCenter = {\n      lat: 46.603354,\n      lng: 1.888334\n    };\n    const zoomLevel = 6;\n    // Create the map\n    this.map = L.map('map', {\n      center: [franceCenter.lat, franceCenter.lng],\n      zoom: zoomLevel\n    });\n    // Add the main layer\n    const mainLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      minZoom: 2,\n      maxZoom: 19\n    });\n    // Add the main layer to the map\n    mainLayer.addTo(this.map);\n  }\n  // Function to get the user location\n  getUserLocation() {\n    // Create the icon\n    const menIcon = L.icon({\n      iconUrl: '../assets/men.png',\n      iconSize: [22, 50],\n      popupAnchor: [0, -30]\n    });\n    // Get the user location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const userLat = position.coords.latitude;\n        const userLng = position.coords.longitude;\n        this.map.setView([userLat, userLng], 16);\n        // Add the marker\n        L.marker([userLat, userLng], {\n          icon: menIcon\n        }).addTo(this.map).bindPopup('Votre position').openPopup();\n      }, error => {\n        console.error('Geolocation error : ', error);\n      });\n    } else {\n      console.error('Geolocation is not supported by this browser.');\n    }\n  }\n  // Function to load the buildings\n  loadBatiments() {\n    if (this.selectedType) {\n      this.batimentService.getBatimentsByType(this.selectedType).subscribe(data => {\n        this.batiments = data;\n        this.addMarkers();\n      });\n    } else {\n      this.batimentService.getBatiments().subscribe(data => {\n        this.batiments = data;\n        this.addMarkers();\n      });\n    }\n  }\n  // Function to add a marker\n  addMarkers() {\n    // Add a marker for each building\n    this.batiments.forEach(batiment => {\n      // Create the marker\n      const marker = L.marker([batiment.lat, batiment.lon]).addTo(this.map);\n      // Create the card content\n      const cardContent = `\n        <div class=\"card\">\n          <img src=\"${batiment.image}\" class=\"card-img-top\" alt=\"Batiment\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\" style=\"text-align : center\">${batiment.nom}</h5>\n            <p class=\"card-text\">Type: ${batiment.type}</p>\n            <p class=\"card-text\">Statut: ${batiment.statut}</p>\n          </div>\n        </div>\n      `;\n      // Add the popup and the tooltip\n      marker.bindPopup(cardContent);\n      marker.bindTooltip(batiment.nom);\n      // When we click on the marker, the details appear\n      marker.on('click', () => {\n        marker.openPopup();\n      });\n      // When we hover over the marker, only the name appears\n      marker.on('mouseover', () => {\n        marker.openTooltip();\n      });\n      // When we move the mouse out of the marker, the tooltip closes\n      marker.on('mouseout', () => {\n        marker.closeTooltip();\n      });\n    });\n  }\n  resetView() {\n    console.log(\"back to user\");\n    this.getUserLocation();\n  }\n};\nCarteComponent = __decorate([Component({\n  selector: 'app-carte',\n  templateUrl: './carte.component.html',\n  styleUrls: ['./carte.component.css']\n})], CarteComponent);\nexport { CarteComponent };","map":{"version":3,"names":["Component","L","CarteComponent","constructor","batimentService","filterService","batiments","selectedType","markers","ngAfterViewInit","map","createMap","getUserLocation","loadBatiments","onTypeSelected","type","franceCenter","lat","lng","zoomLevel","center","zoom","mainLayer","tileLayer","minZoom","maxZoom","addTo","menIcon","icon","iconUrl","iconSize","popupAnchor","navigator","geolocation","getCurrentPosition","position","userLat","coords","latitude","userLng","longitude","setView","marker","bindPopup","openPopup","error","console","getBatimentsByType","subscribe","data","addMarkers","getBatiments","forEach","batiment","lon","cardContent","image","nom","statut","bindTooltip","on","openTooltip","closeTooltip","resetView","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Easy Services Pro\\Desktop\\TER 2024\\2024_TER_patrimoine\\frontend-angular\\src\\app\\carte\\carte.component.ts"],"sourcesContent":["import { AfterViewInit, Component, EventEmitter, OnInit, OnDestroy} from '@angular/core';\nimport * as L from 'leaflet';\nimport { BatimentDTO } from './batiment-dto.model';\nimport { BatimentService } from './batiment.service';\nimport { FilterService } from '../filters/filters-service.model';\nimport { FiltersComponent } from '../filters/filters.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-carte',\n  templateUrl: './carte.component.html',\n  styleUrls: ['./carte.component.css']\n})\nexport class CarteComponent implements AfterViewInit{\n\n  map: L.Map |undefined ;\n  batiments: BatimentDTO[] = [];\n  selectedType: string = '';\n  markers: any[] = [];\n\n  constructor(private batimentService: BatimentService, private filterService: FilterService) { }\n \n  \n  // Function to initialize the map\n  ngAfterViewInit(): void {\n    if (typeof this.map === 'undefined') {\n      this.createMap();\n      this.getUserLocation();\n      this.loadBatiments();\n    }\n  }\n\n  onTypeSelected(type: string): void {\n    this.selectedType = type;\n    this.loadBatiments();\n  }\n  \n\n  // Function to create the map\n  createMap() {\n    const franceCenter = {\n      lat: 46.603354,\n      lng: 1.888334,\n    };\n    const zoomLevel = 6;\n\n    // Create the map\n    this.map = L.map('map', {\n      center: [franceCenter.lat, franceCenter.lng],\n      zoom: zoomLevel\n    });\n\n    // Add the main layer\n    const mainLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      minZoom: 2,\n      maxZoom: 19,\n    });\n\n    // Add the main layer to the map\n    mainLayer.addTo(this.map);\n\n\n  }\n\n  // Function to get the user location\n  getUserLocation() {\n    // Create the icon\n    const menIcon = L.icon({\n      iconUrl: '../assets/men.png',\n      iconSize: [22, 50],\n      popupAnchor: [0, -30]\n    });\n\n    // Get the user location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const userLat = position.coords.latitude;\n        const userLng = position.coords.longitude;\n\n        this.map!.setView([userLat, userLng], 16);\n\n        // Add the marker\n        L.marker([userLat, userLng], { icon: menIcon }).addTo(this.map!).bindPopup('Votre position').openPopup();\n\n      }, error => {\n        console.error('Geolocation error : ', error);\n      });\n\n    } else {\n      console.error('Geolocation is not supported by this browser.');\n    }\n  }\n\n  // Function to load the buildings\n  loadBatiments(): void {\n    if (this.selectedType) {\n      this.batimentService.getBatimentsByType(this.selectedType).subscribe(data => {\n        this.batiments = data;\n        this.addMarkers();\n      });\n    }else {\n      this.batimentService.getBatiments().subscribe(data => {\n        this.batiments = data;\n        this.addMarkers();\n      });\n    }\n  }\n\n  // Function to add a marker\n  addMarkers(): void {\n    // Add a marker for each building\n    this.batiments.forEach(batiment => {\n      // Create the marker\n      const marker = L.marker([batiment.lat, batiment.lon]).addTo(this.map!);\n\n      // Create the card content\n      const cardContent = `\n        <div class=\"card\">\n          <img src=\"${batiment.image}\" class=\"card-img-top\" alt=\"Batiment\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\" style=\"text-align : center\">${batiment.nom}</h5>\n            <p class=\"card-text\">Type: ${batiment.type}</p>\n            <p class=\"card-text\">Statut: ${batiment.statut}</p>\n          </div>\n        </div>\n      `;\n\n      // Add the popup and the tooltip\n      marker.bindPopup(cardContent);\n      marker.bindTooltip(batiment.nom);\n\n      // When we click on the marker, the details appear\n      marker.on('click', () => {\n        marker.openPopup();\n      });\n\n      // When we hover over the marker, only the name appears\n      marker.on('mouseover', () => {\n        marker.openTooltip();\n      });\n\n      // When we move the mouse out of the marker, the tooltip closes\n      marker.on('mouseout', () => {\n        marker.closeTooltip();\n      });\n    });\n  }\n\n  resetView(): void {\n    console.log(\"back to user\");\n    this.getUserLocation();\n  }\n\n  \n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}