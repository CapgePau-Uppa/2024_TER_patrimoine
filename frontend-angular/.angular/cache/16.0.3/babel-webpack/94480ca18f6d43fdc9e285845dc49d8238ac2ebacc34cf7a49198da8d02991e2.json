{"ast":null,"code":"import * as L from 'leaflet';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./batiment.service\";\nimport * as i2 from \"../filters/filters-service.model\";\nimport * as i3 from \"../details/details.component\";\nclass CarteComponent {\n  constructor(batimentService, filterService) {\n    this.batimentService = batimentService;\n    this.filterService = filterService;\n    this.batiments = [];\n    this.selectedType = '';\n    this.markers = [];\n  }\n  // Function to initialize the map\n  ngAfterViewInit() {\n    if (typeof this.map === 'undefined') {\n      this.createMap();\n      this.getUserLocation();\n      this.loadBatiments();\n    }\n  }\n  // Function to create the map\n  createMap() {\n    const franceCenter = {\n      lat: 46.603354,\n      lng: 1.888334\n    };\n    const zoomLevel = 6;\n    // Create the map\n    this.map = L.map('map', {\n      center: [franceCenter.lat, franceCenter.lng],\n      zoom: zoomLevel\n    });\n    // Add the main layer\n    const mainLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      minZoom: 2,\n      maxZoom: 19\n    });\n    // Add the main layer to the map\n    mainLayer.addTo(this.map);\n  }\n  // Function to get the user location\n  getUserLocation() {\n    // Create the icon\n    const menIcon = L.icon({\n      iconUrl: '../assets/men.png',\n      iconSize: [22, 50],\n      popupAnchor: [0, -30]\n    });\n    // Get the user location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const userLat = position.coords.latitude;\n        const userLng = position.coords.longitude;\n        this.map.setView([userLat, userLng], 16);\n        // Add the marker\n        L.marker([userLat, userLng], {\n          icon: menIcon\n        }).addTo(this.map).bindPopup('Votre position').openPopup();\n      }, error => {\n        console.error('Geolocation error : ', error);\n      });\n    } else {\n      console.error('Geolocation is not supported by this browser.');\n    }\n  }\n  // Function to load the buildings\n  loadBatiments() {\n    this.batimentService.getBatimentsByType('église').subscribe(data => {\n      this.batiments = data;\n      this.addMarkers();\n    });\n  }\n  // Function to add a marker\n  addMarkers() {\n    // Add a marker for each building\n    this.batiments.forEach(batiment => {\n      // Create the marker\n      const marker = L.marker([batiment.lat, batiment.lon]).addTo(this.map);\n      // Create the card content\n      const cardContent = `\n        <div class=\"card\">\n          <img src=\"${batiment.image}\" class=\"card-img-top\" alt=\"Batiment\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\" style=\"text-align : center\">${batiment.nom}</h5>\n            <p class=\"card-text\">Type: ${batiment.type}</p>\n            <p class=\"card-text\">Statut: ${batiment.statut}</p>\n          </div>\n        </div>\n      `;\n      // Add the popup and the tooltip\n      marker.bindPopup(cardContent);\n      marker.bindTooltip(batiment.nom);\n      // When we click on the marker, the details appear\n      marker.on('click', () => {\n        marker.openPopup();\n      });\n      // When we hover over the marker, only the name appears\n      marker.on('mouseover', () => {\n        marker.openTooltip();\n      });\n      // When we move the mouse out of the marker, the tooltip closes\n      marker.on('mouseout', () => {\n        marker.closeTooltip();\n      });\n    });\n  }\n  resetView() {\n    console.log(\"back to user\");\n    this.getUserLocation();\n  }\n}\nCarteComponent.ɵfac = function CarteComponent_Factory(t) {\n  return new (t || CarteComponent)(i0.ɵɵdirectiveInject(i1.BatimentService), i0.ɵɵdirectiveInject(i2.FilterService));\n};\nCarteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CarteComponent,\n  selectors: [[\"app-carte\"]],\n  decls: 6,\n  vars: 0,\n  consts: [[1, \"map-wrapper\"], [1, \"map-border\"], [3, \"click\"], [1, \"fas\", \"fa-crosshairs\"], [\"id\", \"map\"], [\"id\", \"details\"]],\n  template: function CarteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function CarteComponent_Template_button_click_2_listener() {\n        return ctx.resetView();\n      });\n      i0.ɵɵelement(3, \"i\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"div\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(5, \"app-details\", 5);\n    }\n  },\n  dependencies: [i3.DetailsComponent],\n  styles: [\".map-wrapper[_ngcontent-%COMP%] {\\r\\n  position: relative;\\r\\n  height: 90vh;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n.map-border[_ngcontent-%COMP%] {\\r\\n  border: 1px solid white;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n#map[_ngcontent-%COMP%] {\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n  cursor: pointer;\\r\\n  position: absolute;\\r\\n  z-index: 1000;\\r\\n  top: 85px;\\r\\n  left: 11px;\\r\\n  width: 34px;\\r\\n  height: 34px;\\r\\n  background-color: #fff;\\r\\n  border: 2px solid rgba(0, 0, 0, 0.3);\\r\\n  border-radius: 4px;\\r\\n  box-shadow: none;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2FydGUvY2FydGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osVUFBVTtBQUNaOztBQUVBO0VBQ0UsdUJBQXVCO0VBQ3ZCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFlBQVk7RUFDWixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixTQUFTO0VBQ1QsVUFBVTtFQUNWLFdBQVc7RUFDWCxZQUFZO0VBQ1osc0JBQXNCO0VBQ3RCLG9DQUFvQztFQUNwQyxrQkFBa0I7RUFDbEIsZ0JBQWdCO0FBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiLm1hcC13cmFwcGVyIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgaGVpZ2h0OiA5MHZoO1xyXG4gIHotaW5kZXg6IDE7XHJcbn1cclxuXHJcbi5tYXAtYm9yZGVyIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbiNtYXAge1xyXG4gIGhlaWdodDogMTAwJTtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuYnV0dG9uIHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHotaW5kZXg6IDEwMDA7XHJcbiAgdG9wOiA4NXB4O1xyXG4gIGxlZnQ6IDExcHg7XHJcbiAgd2lkdGg6IDM0cHg7XHJcbiAgaGVpZ2h0OiAzNHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgYm9yZGVyOiAycHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjMpO1xyXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICBib3gtc2hhZG93OiBub25lO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\nexport { CarteComponent };","map":{"version":3,"names":["L","CarteComponent","constructor","batimentService","filterService","batiments","selectedType","markers","ngAfterViewInit","map","createMap","getUserLocation","loadBatiments","franceCenter","lat","lng","zoomLevel","center","zoom","mainLayer","tileLayer","minZoom","maxZoom","addTo","menIcon","icon","iconUrl","iconSize","popupAnchor","navigator","geolocation","getCurrentPosition","position","userLat","coords","latitude","userLng","longitude","setView","marker","bindPopup","openPopup","error","console","getBatimentsByType","subscribe","data","addMarkers","forEach","batiment","lon","cardContent","image","nom","type","statut","bindTooltip","on","openTooltip","closeTooltip","resetView","log","i0","ɵɵdirectiveInject","i1","BatimentService","i2","FilterService","selectors","decls","vars","consts","template","CarteComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","CarteComponent_Template_button_click_2_listener","ɵɵelement","ɵɵelementEnd"],"sources":["C:\\Users\\Easy Services Pro\\Desktop\\TER 2024\\2024_TER_patrimoine\\frontend-angular\\src\\app\\carte\\carte.component.ts","C:\\Users\\Easy Services Pro\\Desktop\\TER 2024\\2024_TER_patrimoine\\frontend-angular\\src\\app\\carte\\carte.component.html"],"sourcesContent":["import { AfterViewInit, Component, EventEmitter, OnInit, OnDestroy} from '@angular/core';\nimport * as L from 'leaflet';\nimport { BatimentDTO } from './batiment-dto.model';\nimport { BatimentService } from './batiment.service';\nimport { FilterService } from '../filters/filters-service.model';\nimport { FiltersComponent } from '../filters/filters.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-carte',\n  templateUrl: './carte.component.html',\n  styleUrls: ['./carte.component.css']\n})\nexport class CarteComponent implements AfterViewInit{\n\n  map: L.Map |undefined ;\n  batiments: BatimentDTO[] = [];\n  selectedType: string = '';\n  markers: any[] = [];\n\n  constructor(private batimentService: BatimentService, private filterService: FilterService) { }\n \n  \n  // Function to initialize the map\n  ngAfterViewInit(): void {\n    if (typeof this.map === 'undefined') {\n      this.createMap();\n      this.getUserLocation();\n      this.loadBatiments();\n    }\n  }\n  \n\n  // Function to create the map\n  createMap() {\n    const franceCenter = {\n      lat: 46.603354,\n      lng: 1.888334,\n    };\n    const zoomLevel = 6;\n\n    // Create the map\n    this.map = L.map('map', {\n      center: [franceCenter.lat, franceCenter.lng],\n      zoom: zoomLevel\n    });\n\n    // Add the main layer\n    const mainLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      minZoom: 2,\n      maxZoom: 19,\n    });\n\n    // Add the main layer to the map\n    mainLayer.addTo(this.map);\n\n\n  }\n\n  // Function to get the user location\n  getUserLocation() {\n    // Create the icon\n    const menIcon = L.icon({\n      iconUrl: '../assets/men.png',\n      iconSize: [22, 50],\n      popupAnchor: [0, -30]\n    });\n\n    // Get the user location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const userLat = position.coords.latitude;\n        const userLng = position.coords.longitude;\n\n        this.map!.setView([userLat, userLng], 16);\n\n        // Add the marker\n        L.marker([userLat, userLng], { icon: menIcon }).addTo(this.map!).bindPopup('Votre position').openPopup();\n\n      }, error => {\n        console.error('Geolocation error : ', error);\n      });\n\n    } else {\n      console.error('Geolocation is not supported by this browser.');\n    }\n  }\n\n  // Function to load the buildings\n  loadBatiments(): void {\n    this.batimentService.getBatimentsByType('église').subscribe(data => {\n      this.batiments = data;\n      this.addMarkers();\n    });\n    \n  }\n\n  // Function to add a marker\n  addMarkers(): void {\n    // Add a marker for each building\n    this.batiments.forEach(batiment => {\n      // Create the marker\n      const marker = L.marker([batiment.lat, batiment.lon]).addTo(this.map!);\n\n      // Create the card content\n      const cardContent = `\n        <div class=\"card\">\n          <img src=\"${batiment.image}\" class=\"card-img-top\" alt=\"Batiment\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\" style=\"text-align : center\">${batiment.nom}</h5>\n            <p class=\"card-text\">Type: ${batiment.type}</p>\n            <p class=\"card-text\">Statut: ${batiment.statut}</p>\n          </div>\n        </div>\n      `;\n\n      // Add the popup and the tooltip\n      marker.bindPopup(cardContent);\n      marker.bindTooltip(batiment.nom);\n\n      // When we click on the marker, the details appear\n      marker.on('click', () => {\n        marker.openPopup();\n      });\n\n      // When we hover over the marker, only the name appears\n      marker.on('mouseover', () => {\n        marker.openTooltip();\n      });\n\n      // When we move the mouse out of the marker, the tooltip closes\n      marker.on('mouseout', () => {\n        marker.closeTooltip();\n      });\n    });\n  }\n\n  resetView(): void {\n    console.log(\"back to user\");\n    this.getUserLocation();\n  }\n\n  \n\n}\n","<div class=\"map-wrapper\">\n    <div class=\"map-border\">\n      <button (click)=\"resetView()\">\n        <i class=\"fas fa-crosshairs\"></i>\n      </button>\n      <div id=\"map\"></div>\n    </div>\n</div>\n<app-details id=\"details\"></app-details>\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}