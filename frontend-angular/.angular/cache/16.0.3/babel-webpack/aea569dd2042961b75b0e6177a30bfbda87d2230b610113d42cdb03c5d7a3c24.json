{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass BatimentService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.API;\n    this.selectedTypeSource = new BehaviorSubject(null); // Modifiez le type ici\n    this.selectedType$ = this.selectedTypeSource.asObservable();\n    this.selectedDepSource = new BehaviorSubject(null); // Modifiez le type ici\n    this.selectedDepartement$ = this.selectedDepSource.asObservable();\n  }\n  getBatiments() {\n    return this.http.get(`${this.baseUrl}/batiment`);\n  }\n  getBatimentsByType(type) {\n    return this.http.get(`${this.baseUrl}/batiment/batiments-par-type?type=${type}`);\n  }\n  getBatimentsByDepartement(dep) {\n    return this.http.get(`${this.baseUrl}/batiment/batiments-par-departement?departement=${dep}`);\n  }\n  setSelectedType(type) {\n    this.selectedTypeSource.next(type);\n  }\n  setSelectedDepartement(dep) {\n    this.selectedDepSource.next(dep);\n  }\n}\nBatimentService.ɵfac = function BatimentService_Factory(t) {\n  return new (t || BatimentService)(i0.ɵɵinject(i1.HttpClient));\n};\nBatimentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BatimentService,\n  factory: BatimentService.ɵfac,\n  providedIn: 'root'\n});\nexport { BatimentService };","map":{"version":3,"names":["BehaviorSubject","environment","BatimentService","constructor","http","baseUrl","API","selectedTypeSource","selectedType$","asObservable","selectedDepSource","selectedDepartement$","getBatiments","get","getBatimentsByType","type","getBatimentsByDepartement","dep","setSelectedType","next","setSelectedDepartement","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Easy Services Pro\\Desktop\\TER 2024\\2024_TER_patrimoine\\frontend-angular\\src\\app\\carte\\batiment.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { BatimentDTO } from './batiment-dto.model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BatimentService {\n\n  private baseUrl = environment.API;\n\n  constructor(private http: HttpClient) { }\n\n  getBatiments(): Observable<BatimentDTO[]> {\n    return this.http.get<BatimentDTO[]>(`${this.baseUrl}/batiment`);\n  }\n  getBatimentsByType(type: string): Observable<BatimentDTO[]> {\n    return this.http.get<BatimentDTO[]>(`${this.baseUrl}/batiment/batiments-par-type?type=${type}`);\n  }\n  \n  getBatimentsByDepartement(dep: string): Observable<BatimentDTO[]> {\n    return this.http.get<BatimentDTO[]>(`${this.baseUrl}/batiment/batiments-par-departement?departement=${dep}`);\n  }\n  \n  \n  private selectedTypeSource = new BehaviorSubject<string | null>(null); // Modifiez le type ici\n  selectedType$ = this.selectedTypeSource.asObservable();\n\n  setSelectedType(type: string | null): void { // Modifiez le type ici\n    this.selectedTypeSource.next(type);\n  }\n\n  private selectedDepSource = new BehaviorSubject<string | null>(null); // Modifiez le type ici\n  selectedDepartement$ = this.selectedDepSource.asObservable();\n\n  setSelectedDepartement(dep: string | null): void { // Modifiez le type ici\n    this.selectedDepSource.next(dep);\n}\n}\n"],"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;AAElD,SAASC,WAAW,QAAQ,8BAA8B;;;AAE1D,MAGaC,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAGJ,WAAW,CAACK,GAAG;IAgBzB,KAAAC,kBAAkB,GAAG,IAAIP,eAAe,CAAgB,IAAI,CAAC,CAAC,CAAC;IACvE,KAAAQ,aAAa,GAAG,IAAI,CAACD,kBAAkB,CAACE,YAAY,EAAE;IAM9C,KAAAC,iBAAiB,GAAG,IAAIV,eAAe,CAAgB,IAAI,CAAC,CAAC,CAAC;IACtE,KAAAW,oBAAoB,GAAG,IAAI,CAACD,iBAAiB,CAACD,YAAY,EAAE;EAtBpB;EAExCG,YAAYA,CAAA;IACV,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAgB,GAAG,IAAI,CAACR,OAAO,WAAW,CAAC;EACjE;EACAS,kBAAkBA,CAACC,IAAY;IAC7B,OAAO,IAAI,CAACX,IAAI,CAACS,GAAG,CAAgB,GAAG,IAAI,CAACR,OAAO,qCAAqCU,IAAI,EAAE,CAAC;EACjG;EAEAC,yBAAyBA,CAACC,GAAW;IACnC,OAAO,IAAI,CAACb,IAAI,CAACS,GAAG,CAAgB,GAAG,IAAI,CAACR,OAAO,mDAAmDY,GAAG,EAAE,CAAC;EAC9G;EAMAC,eAAeA,CAACH,IAAmB;IACjC,IAAI,CAACR,kBAAkB,CAACY,IAAI,CAACJ,IAAI,CAAC;EACpC;EAKAK,sBAAsBA,CAACH,GAAkB;IACvC,IAAI,CAACP,iBAAiB,CAACS,IAAI,CAACF,GAAG,CAAC;EACpC;;AA9Baf,eAAe,C;mBAAfA,eAAe,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAftB,eAAe,C;SAAfA,eAAe;EAAAuB,OAAA,EAAfvB,eAAe,CAAAwB,IAAA;EAAAC,UAAA,EAFd;AAAM;SAEPzB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}