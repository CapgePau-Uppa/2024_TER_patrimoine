{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass FilterService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.API;\n  }\n  getAllRegions() {\n    return this.http.get(`${this.baseUrl}/batiment/list-region`);\n  }\n  getAllRegions() {\n    return this.http.get(`${this.baseUrl}/batiment/list-region`);\n  }\n  getAllDepartements() {\n    return this.http.get(`${this.baseUrl}/batiment/list-departement`);\n  }\n  getAllCommunes() {\n    return this.http.get(`${this.baseUrl}/batiment/list-commune`);\n  }\n}\nFilterService.ɵfac = function FilterService_Factory(t) {\n  return new (t || FilterService)(i0.ɵɵinject(i1.HttpClient));\n};\nFilterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FilterService,\n  factory: FilterService.ɵfac,\n  providedIn: 'root'\n});\nexport { FilterService };","map":{"version":3,"names":["environment","FilterService","constructor","http","baseUrl","API","getAllRegions","get","getAllDepartements","getAllCommunes","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Easy Services Pro\\Desktop\\TER 2024\\2024_TER_patrimoine\\frontend-angular\\src\\app\\filters\\filters-service.model.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FilterService {\r\n    private baseUrl = environment.API;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAllRegions(): Observable<string[]> {\r\n        return this.http.get<string[]>(`${this.baseUrl}/batiment/list-region`);\r\n    }\r\n\r\n    getAllRegions(): Observable<string[]> {\r\n        return this.http.get<string[]>(`${this.baseUrl}/batiment/list-region`);\r\n    }\r\n\r\n    getAllDepartements(): Observable<string[]> {\r\n        return this.http.get<string[]>(`${this.baseUrl}/batiment/list-departement`);\r\n    }\r\n\r\n    getAllCommunes(): Observable<string[]> {\r\n        return this.http.get<string[]>(`${this.baseUrl}/batiment/list-commune`);\r\n    }\r\n}\r\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,8BAA8B;;;AAE1D,MAGaC,aAAa;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,OAAO,GAAGJ,WAAW,CAACK,GAAG;EACO;EAExCC,aAAaA,CAAA;IACT,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAW,GAAG,IAAI,CAACH,OAAO,uBAAuB,CAAC;EAC1E;EAEAE,aAAaA,CAAA;IACT,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAW,GAAG,IAAI,CAACH,OAAO,uBAAuB,CAAC;EAC1E;EAEAI,kBAAkBA,CAAA;IACd,OAAO,IAAI,CAACL,IAAI,CAACI,GAAG,CAAW,GAAG,IAAI,CAACH,OAAO,4BAA4B,CAAC;EAC/E;EAEAK,cAAcA,CAAA;IACV,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAW,GAAG,IAAI,CAACH,OAAO,wBAAwB,CAAC;EAC3E;;AAlBSH,aAAa,C;mBAAbA,aAAa,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAbZ,aAAa,C;SAAbA,aAAa;EAAAa,OAAA,EAAbb,aAAa,CAAAc,IAAA;EAAAC,UAAA,EAFZ;AAAM;SAEPf,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}